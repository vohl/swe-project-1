#!/usr/bin/env python3

import sys

#lazy cache
cache = [None]*1000001
#cache made out of 1000 intervals
meta_cache_L1 = {None, 182, 217, 238, 215, 236, 262, 252, 247, 260, 268, 250, 263, 276, 271, 271, 266, 279, 261, 274, 256, 269, 269, 282, 264, 264, 308, 259, 259, 272, 272, 285, 267, 267, 311, 324, 249, 306, 244, 306, 288, 257, 288, 270, 270, 314, 283, 314, 296, 296, 278, 309, 340, 322, 260, 260, 322, 304, 273, 304, 335, 317, 286, 330, 299, 268, 268, 312, 312, 299, 312, 325, 263, 294, 325, 307, 307, 351, 338, 307, 320, 320, 320, 289, 320, 302, 302, 333, 333, 315, 315, 333, 315, 284, 315, 328, 297, 297, 284, 328, 341, 310, 310, 248, 310, 341, 354, 292, 279, 310, 292, 323, 323, 292, 305, 349, 305, 305, 336, 305, 318, 336, 318, 331, 287, 318, 331, 287, 331, 344, 331, 300, 331, 313, 300, 344, 313, 331, 313, 313, 344, 326, 375, 282, 326, 295, 357, 295, 326, 326, 370, 295, 308, 308, 352, 308, 383, 339, 321, 352, 370, 290, 339, 321, 334, 321, 352, 321, 321, 334, 290, 334, 303, 347, 334, 272, 334, 334, 347, 303, 365, 316, 334, 254, 316, 329, 347, 329, 316, 360, 329, 329, 347, 329, 342, 360, 298, 285, 329, 329, 342, 311, 342, 311, 311, 355, 373, 311, 311, 311, 342, 355, 355, 373, 293, 280, 386, 324, 324, 355, 324, 355, 324, 324, 324, 368, 368, 306, 355, 306, 443, 350, 337, 368, 381, 306, 337, 350, 306, 350, 368, 275, 319, 337, 275, 319, 332, 350, 288, 350, 332, 319, 319, 332, 363, 288, 332, 345, 301, 345, 332, 332, 301, 407, 332, 332, 314, 345, 270, 345, 407, 283, 314, 358, 332, 345, 314, 389, 345, 314, 345, 358, 314, 358, 358, 376, 314, 327, 389, 345, 327, 327, 340, 358, 296, 358, 327, 327, 371, 327, 371, 296, 340, 340, 340, 265, 309, 309, 371, 340, 371, 309, 384, 340, 278, 340, 353, 309, 353, 322, 371, 353, 309, 322, 384, 340, 247, 322, 291, 353, 322, 291, 353, 335, 322, 322, 366, 366, 335, 366, 304, 335, 353, 335, 304, 441, 348, 322, 335, 366, 304, 379, 335, 304, 348, 379, 348, 304, 379, 348, 410, 348, 361, 317, 317, 361, 348, 286, 317, 361, 392, 348, 317, 348, 330, 361, 423, 361, 330, 361, 379, 374, 361, 330, 330, 348, 330, 299, 330, 436, 361, 330, 299, 361, 405, 312, 330, 330, 374, 299, 374, 387, 268, 343, 343, 405, 361, 268, 312, 312, 449, 330, 343, 374, 374, 312, 387, 343, 343, 281, 343, 325, 356, 418, 356, 356, 356, 374, 294, 281, 312, 343, 387, 343, 356, 281, 325, 387, 400, 356, 325, 294, 356, 338, 325, 338, 325, 325, 369, 369, 387, 307, 294, 369, 338, 338, 356, 338, 307, 307, 307, 444, 369, 325, 338, 369, 369, 413, 382, 338, 307, 276, 338, 307, 382, 320, 307, 382, 351, 351, 413, 382, 351, 307, 320, 338, 382, 382, 382, 351, 320, 320, 426, 395, 351, 320, 320, 289, 351, 395, 364, 320, 426, 320, 364, 364, 382, 364, 377, 364, 333, 470, 333, 351, 364, 395, 302, 333, 439, 364, 333, 364, 333, 302, 364, 408, 408, 377, 377, 333, 346, 346, 377, 377, 346, 302, 333, 377, 346, 346, 408, 364, 346, 359, 315, 346, 452, 377, 333, 315, 346, 377, 315, 346, 421, 390, 346, 315, 315, 284, 359, 328, 359, 328, 421, 328, 359, 359, 359, 359, 377, 359, 372, 359, 328, 346, 390, 390, 346, 359, 266, 328, 328, 434, 372, 359, 359, 328, 315, 297, 359, 403, 328, 328, 328, 328, 372, 372, 341, 372, 372, 403, 297, 297, 372, 341, 328, 341, 403, 359, 341, 354, 310, 310, 310, 447, 372, 372, 310, 341, 372, 372, 310, 354, 385, 354, 509, 341, 279, 279, 341, 310, 385, 354, 310, 416, 310, 354, 354, 354, 416, 372, 416, 279, 279, 310, 323, 341, 323, 385, 341, 336, 354, 385, 323, 385, 429, 354, 398, 354, 323, 323, 292, 292, 367, 442, 323, 367, 323, 336, 323, 323, 367, 336, 367, 385, 336, 336, 380, 367, 336, 336, 305, 380, 336, 354, 398, 380, 292, 336, 336, 442, 323, 367, 367, 336, 336, 318, 367, 367, 367, 411, 380, 349, 504, 380, 305, 349, 349, 336, 380, 380, 411, 380, 305, 305, 380, 349, 336, 349, 411, 367, 411, 349, 362, 305, 349, 318, 362, 318, 380, 336, 380, 349, 349, 424, 318, 380, 424, 424, 393, 318, 349, 318, 318, 349, 287, 362, 318, 393, 362, 331, 318, 424, 318, 362, 362, 331, 362, 362, 380, 362, 331, 375, 362, 331, 331, 468, 331, 393, 349, 344, 393, 362, 331, 437, 331, 393, 437, 362, 344, 362, 331, 331, 313, 375, 300, 362, 406, 406, 375, 344, 437, 375, 331, 331, 468, 344, 300, 375, 375, 406, 388, 300, 331, 375, 344, 406, 331, 344, 406, 287, 362, 375, 313, 357, 344, 344, 450, 357, 450, 375, 344, 375, 326, 344, 313, 419, 313, 375, 344, 419, 388, 357, 344, 313, 344, 525, 344, 388, 357, 313, 388, 331, 357, 401, 313, 419, 313, 357, 357, 357, 326, 357, 419, 388, 375, 357, 370, 313, 357, 326, 326, 344, 326, 388, 326, 344, 357, 388, 326, 432, 326, 326, 388, 432, 370, 401, 326, 357, 326, 326, 313, 370, 295, 370, 445, 401, 295, 370, 339, 326, 295, 326, 370, 326, 370, 339, 370, 295, 401, 401, 383, 295, 383, 295, 445, 326, 370, 326, 476, 383, 401, 357, 370, 339, 339, 383, 339, 432, 339, 339, 445, 308, 370, 339, 370, 476, 383, 339, 370, 308, 370, 370, 414, 414, 383, 352, 445, 507, 383, 339, 339, 352, 383, 352, 383, 383, 383, 352, 414, 383, 414, 414, 383, 339, 352, 352, 321, 352, 414, 352, 383, 414, 352, 321, 365, 308, 321, 352, 458, 352, 321, 383, 383, 339, 383, 334, 383, 334, 427, 321, 383, 383, 352, 427, 352, 396, 321, 352, 321, 321, 352, 290, 365, 365, 365, 440, 396, 396}
#cache made out of 400 intervals
meta_cache_L2 = {None, 171, 182, 177, 180, 183, 209, 217, 194, 238, 215, 197, 210, 236, 218, 262, 244, 257, 239, 252, 234, 216, 247, 260, 242, 242, 255, 268, 237, 250, 263, 263, 245, 276, 258, 196, 271, 271, 240, 253, 235, 266, 235, 248, 279, 248, 261, 261, 274, 274, 243, 243, 256, 256, 269, 269, 269, 238, 282, 251, 251, 264, 264, 246, 233, 246, 308, 259, 246, 259, 259, 228, 241, 272, 272, 272, 254, 223, 285, 285, 254, 267, 267, 267, 267, 311, 280, 249, 311, 324, 249, 249, 262, 306, 262, 244, 231, 275, 244, 306, 275, 257, 288, 226, 257, 288, 257, 257, 226, 270, 270, 270, 314, 239, 239, 252, 283, 283, 314, 252, 252, 265, 296, 296, 265, 265, 265, 278, 309, 247, 278, 340, 278, 322, 247, 260, 260, 216, 260, 260, 322, 291, 304, 260, 273, 242, 273, 273, 273, 304, 317, 273, 335, 286, 317, 255, 286, 317, 330, 255, 299, 255, 268, 268, 268, 268, 268, 268, 281, 312, 312, 312, 250, 299, 281, 312, 281, 312, 325, 250, 263, 263, 294, 294, 294, 294, 325, 307, 263, 294, 307, 307, 351, 232, 245, 276, 338, 307, 276, 307, 320, 276, 320, 258, 289, 289, 320, 289, 289, 289, 320, 289, 258, 289, 302, 302, 271, 333, 240, 271, 333, 271, 315, 302, 302, 315, 271, 271, 333, 240, 284, 302, 315, 284, 253, 284, 315, 328, 284, 284, 297, 266, 253, 297, 297, 266, 266, 328, 266, 328, 341, 266, 297, 310, 279, 310, 310, 235, 235, 248, 297, 310, 341, 310, 279, 354, 310, 323, 279, 279, 279, 261, 261, 292, 310, 292, 292, 261, 323, 292, 323, 305, 292, 292, 292, 305, 261, 305, 349, 323, 212, 305, 274, 305, 305, 336, 305, 318, 305, 305, 318, 287, 274, 274, 336, 256, 256, 318, 331, 318, 287, 287, 256, 318, 287, 318, 331, 300, 256, 287, 331, 331, 287, 300, 344, 300, 331, 300, 238, 287, 331, 269, 331, 313, 313, 269, 300, 344, 313, 269, 313, 269, 331, 313, 251, 313, 282, 300, 313, 251, 344, 326, 282, 282, 326, 295, 375, 282, 282, 282, 326, 295, 251, 264, 295, 295, 357, 233, 295, 233, 264, 326, 295, 326, 264, 370, 295, 264, 233, 295, 308, 277, 233, 308, 308, 352, 308, 264, 308, 246, 383, 308, 308, 339, 308, 308, 321, 277, 352, 308, 290, 370, 277, 277, 290, 321, 339, 259, 259, 321, 290, 334, 308, 321, 290, 352, 334, 321, 290, 228, 321, 303, 334, 290, 259, 290, 290, 334, 303, 334, 303, 303, 303, 347, 321, 334, 272, 303, 272, 272, 334, 303, 272, 334, 316, 347, 303, 272, 303, 303, 285, 365, 272, 272, 316, 272, 316, 334, 241, 254, 316, 254, 329, 303, 316, 316, 347, 285, 329, 285, 316, 316, 254, 316, 360, 329, 285, 254, 329, 298, 329, 347, 329, 254, 298, 329, 267, 342, 360, 329, 236, 298, 236, 267, 285, 329, 329, 267, 329, 236, 342, 311, 298, 267, 311, 298, 342, 311, 280, 267, 311, 311, 280, 355, 329, 311, 342, 373, 311, 280, 280, 311, 280, 311, 280, 342, 324, 355, 311, 311, 280, 355, 311, 293, 373, 293, 280, 280, 280, 280, 386, 324, 342, 324, 249, 324, 293, 293, 337, 355, 293, 324, 293, 355, 337, 262, 293, 324, 324, 262, 324, 262, 368, 337, 293, 262, 368, 306, 293, 262, 355, 306, 262, 262, 306, 306, 443, 350, 324, 306, 337, 293, 368, 306, 275, 381, 293, 337, 306, 231, 337, 306, 319, 350, 319, 306, 275, 350, 244, 306, 293, 368, 288, 275, 275, 275, 319, 288, 319, 337, 257, 244, 275, 257, 319, 257, 332, 288, 350, 319, 257, 288, 350, 257, 332, 332, 319, 288, 319, 226, 257, 319, 301, 332, 301, 288, 257, 363, 288, 288, 257, 332, 345, 332, 257, 288, 301, 301, 270, 345, 301, 319, 332, 332, 288, 301, 270, 407, 270, 288, 332, 332, 301, 270, 332, 301, 314, 345, 314, 301, 270, 270, 345, 314, 345, 407, 363, 345, 270, 270, 270, 314, 283, 283, 358, 332, 252, 314, 345, 252, 314, 314, 252, 283, 389, 345, 283, 314, 239, 283, 345, 283, 327, 358, 327, 314, 314, 283, 358, 314, 283, 358, 376, 327, 283, 283, 314, 283, 327, 283, 327, 389, 345, 265, 327, 221, 327, 327, 296, 265, 296, 340, 358, 296, 327, 252, 296, 358, 265, 265, 327, 309, 296, 327, 327, 265, 265, 371, 296, 234, 371, 340, 265, 296, 296, 265, 340, 327, 296, 340, 340, 309, 278, 265, 265, 278, 309, 309, 278, 309, 371, 327, 247, 309, 340, 371, 309, 371, 309, 278, 384, 353, 340, 309, 309, 278, 278, 340, 309, 247, 322, 353, 322, 309, 309, 278, 353, 322, 322, 278, 353, 296, 371, 291, 278, 247, 309, 322, 322, 291, 322, 384, 291, 340, 322, 247, 247, 291, 322, 322, 260, 291, 353, 291, 353, 291, 322, 247, 291, 291, 353, 260, 335, 322, 335, 322, 291, 322, 291, 322, 366, 322, 291, 366, 309, 335, 291, 291, 291, 366, 291, 304, 304, 260, 335, 335, 353, 273, 335, 304, 260, 304, 273, 304, 441, 304, 348, 304, 322, 304, 335, 260, 291, 273, 366, 304, 242, 273, 379, 348, 335, 304, 335, 273, 229, 348, 335, 379, 379, 322, 348, 317, 304, 273, 273, 379, 348, 242, 317, 348, 410, 291, 366, 286, 273, 361, 273, 273, 273, 317, 286, 286, 361, 317, 335, 255, 317, 348, 286, 255, 317, 317, 348, 361, 286, 392, 286, 348, 317, 317, 317, 242, 286, 348, 286, 317, 330, 317, 361, 286, 317, 423, 330, 255, 361, 330, 317, 286, 361, 361, 379, 299, 286, 286, 374, 361, 317, 330, 299, 299, 286, 330, 330, 348, 268, 330, 255, 255, 286, 299, 330, 299, 436, 255, 361, 299, 317, 361, 330, 330, 299, 286, 268, 361, 361, 255, 405, 299, 312, 299, 330, 299, 330, 299, 268, 343, 374, 330, 299, 255, 374, 343, 387, 268, 299, 268, 268, 255, 299, 343, 330, 299, 343, 405, 250, 361, 281, 343, 268, 268, 299, 312, 312, 268, 281, 449, 374, 356, 330, 281, 312, 312, 343, 268, 374, 312, 374, 312, 268, 281, 343, 387, 299, 343, 312, 281, 343, 237, 281, 281, 343, 312, 281, 325, 281, 356, 325, 312, 281, 418, 281, 312, 356, 356, 312, 281, 356, 356, 299, 374, 294, 281, 281, 250, 281, 312, 281, 325, 312, 343, 281, 387, 387, 250, 343, 338, 325, 356, 232, 281, 325, 325, 294, 387, 263, 294, 400, 294, 325, 356, 294, 294, 325, 263, 294, 294, 356, 325, 294, 338, 281, 325, 338, 294, 325, 294, 325, 294, 263, 325, 369, 338, 294, 369, 250, 369, 387, 307, 294, 294, 263, 294, 369, 294, 294, 338, 325, 307, 338, 338, 338, 356, 351, 276, 338, 307, 263, 276, 307, 307, 307, 276, 276, 444, 307, 369, 307, 325, 245, 307, 307, 338, 263, 369, 307, 369, 307, 369, 294, 413, 276, 382, 351, 307, 338, 307, 307, 307, 232, 276, 276, 338, 307, 307, 294, 382, 307, 351, 320, 276, 307, 276, 307, 382, 307, 351, 320, 338, 320, 351, 351, 413, 245, 369, 382, 351, 276, 258, 289, 307, 276, 320, 320, 320, 338, 289, 320, 382, 227, 338, 382, 320, 320, 351, 276, 307, 320, 320, 320, 320, 258, 426, 320, 395, 351, 289, 351, 320, 320, 320, 320, 258, 245, 289, 289, 351, 289, 245, 333, 395, 364, 333, 320, 320, 289, 426, 333, 289, 271, 320, 364, 258, 320, 289, 364, 364, 307, 382, 302, 364, 333, 289, 377, 302, 364, 289, 289, 333, 320, 470, 289, 333, 333, 276, 351, 346, 364, 333, 395, 258, 258, 289, 302, 333, 302, 302, 271, 439, 302, 364, 302, 333, 320, 364, 333, 302, 333, 302, 271, 302, 271, 364, 302, 408, 258, 408, 302, 377, 346, 302, 333, 302, 377, 333, 302, 271, 333, 346, 346, 333, 302, 377, 258, 377, 258, 346, 315, 302, 302, 271, 333, 302, 377, 302, 346, 346, 240, 333, 271, 346, 227, 408, 289, 364, 346, 284, 346, 315, 359, 271, 302, 315, 315, 315, 346, 284, 452, 271, 315, 377, 315, 333, 328, 253, 315, 315, 346, 284, 377, 315, 284, 315, 315, 315, 346, 421, 284, 346, 390, 359, 315, 346, 315, 284, 315, 315, 284, 253, 284, 284, 359, 346, 315, 271, 328, 284, 315, 359, 328, 284, 315, 284, 421, 328, 284, 266, 359, 359, 359, 346, 315, 284, 359, 359, 302, 377, 328, 297, 359, 284, 284, 372, 297, 359, 328, 315, 328, 328, 315, 346, 284, 328, 390, 390, 253, 346, 315, 359, 328, 328, 253, 253, 266, 328, 297, 328, 328, 328, 266, 434, 372, 297, 359, 359, 328, 359, 235, 328, 297, 328, 297, 315, 297, 297, 297, 359, 328, 359, 328, 403, 297, 328, 328, 328, 297, 297, 328, 297, 328, 297, 279, 372, 266, 341, 372, 341, 297, 297, 372, 253, 372, 279, 341, 403, 385, 279, 297, 266, 279, 297, 372, 297, 248, 341, 310, 328, 310, 297, 341, 222, 403, 341, 359, 341, 279, 341, 266, 341, 354, 266, 279, 310, 310, 310, 310, 310, 279, 447, 266, 310, 372, 310, 310, 328, 372, 248, 310, 310, 341, 266, 248, 372, 310, 310, 372, 310, 310, 266, 310, 354, 279, 385, 341, 354, 310, 509, 310, 279, 310, 341, 279, 235, 235, 279, 279, 341, 310, 310, 310, 279, 385, 279, 354, 310, 323, 310, 310, 279, 416, 310, 279, 279, 310, 354, 354, 354, 341, 323, 279, 354, 354, 416, 297, 248, 372, 416, 292, 354, 279, 261, 261, 279, 310, 279, 310, 323, 323, 292, 310, 341, 279, 323, 385, 385, 323, 292, 341, 292, 336, 323, 354, 354, 336, 261, 385, 323, 323, 323, 323, 385, 354, 429, 261, 323, 354, 398, 292, 323, 310, 354, 323, 292, 292, 323, 292, 261, 248, 292, 261, 292, 367, 323, 292, 442, 398, 323, 261, 323, 367, 336, 292, 323, 292, 292, 336, 323, 292, 323, 261, 323, 367, 261, 336, 323, 292, 367, 248, 367, 310, 385, 336, 305, 305, 292, 336, 261, 380, 292, 261, 367, 336, 336, 336, 336, 323, 305, 305, 261, 336, 380, 336, 279, 354, 349, 261, 274, 336, 398, 367, 380, 261, 274, 336, 305, 336, 336, 336, 336, 274, 442, 261, 305, 367, 349, 305, 212, 323, 367, 336, 305, 305, 336, 336, 318, 261, 367, 305, 274, 367, 305, 367, 305, 305, 349, 411, 274, 380, 336, 349, 305, 305, 504, 380, 274, 336, 305, 274, 230, 274, 349, 274, 349, 336, 305, 305, 380, 292, 380, 323, 274, 349, 411, 318, 380, 287, 305, 274, 274, 305, 274, 380, 336, 349, 349, 318, 243, 336, 318, 305, 349, 261, 411, 349, 274, 367, 411, 367, 380, 349, 274, 256, 362, 243, 287, 305, 318, 274, 349, 318, 318, 287, 287, 362, 287, 318, 380, 380, 318, 243, 336, 380, 256, 318, 318, 349, 349, 287, 243, 380, 424, 318, 318, 318, 380, 318, 349, 274, 424, 318, 287, 393, 349, 362, 318, 318, 349, 318, 318, 318, 318, 318, 300, 256, 243, 349, 256, 287, 349, 362, 318, 318, 274, 274, 393, 287, 318, 362, 331, 318, 287, 318, 305, 287, 424, 331, 287, 269, 318, 362, 362, 331, 362, 349, 331, 318, 287, 362, 243, 362, 305, 256, 380, 287, 300, 362, 256, 331, 269, 375, 318, 287, 362, 300, 331, 287, 331, 300, 225, 318, 468, 300, 331, 331, 393, 393, 331, 238, 349, 256, 269, 362, 331, 393, 362, 331, 256, 331, 437, 331, 300, 331, 300, 300, 393, 269, 437, 256, 331, 300, 362, 344, 300, 331, 318, 362, 287, 331, 300, 300, 331, 300, 313, 300, 300, 375, 300, 300, 362, 331, 362, 406, 300, 300, 406, 300, 331, 375, 300, 344, 331, 300, 437, 300, 375, 269, 331, 300, 282, 331, 269, 468, 344, 375, 269, 344, 300, 300, 375, 256, 375, 375, 282, 393, 344, 406, 388, 300, 282, 300, 269, 269, 331, 300, 331, 375, 300, 344, 300, 406, 238, 331, 313, 313, 300, 344, 406, 388, 406, 287, 251, 362, 344, 362, 375, 344, 269, 313, 238, 357, 344, 282, 344, 313, 313, 344, 313, 344, 450, 282, 357, 450, 313, 313, 375, 357, 344, 313, 331, 326, 375, 326, 313, 313, 313, 344, 313, 282, 282, 419, 313, 282, 313, 375, 375, 344, 313, 344, 251, 419, 282, 282, 344, 388, 344, 357, 313, 313, 344, 295, 313, 282, 313, 344, 282, 525, 251, 344, 282, 388, 282, 282, 357, 344, 313, 313, 269, 282, 388, 282, 282, 357, 357, 326, 401, 282, 313, 313, 282, 419, 326, 282, 282, 313, 313, 357, 313, 357, 357, 344, 326, 326, 313, 313, 357, 269, 419, 300, 251, 388, 326, 357, 375, 282, 357, 282, 282, 251, 370, 295, 295, 357, 326, 313, 326, 326, 326, 326, 313, 295, 344, 295, 326, 326, 388, 388, 326, 326, 295, 344, 326, 313, 357, 326, 388, 357, 295, 326, 264, 282, 432, 326, 326, 326, 326, 326, 326, 388, 357, 264, 432, 370, 326, 295, 401, 357, 295, 326, 326, 357, 344, 326, 326, 295, 295, 326, 295, 295, 313, 251, 370, 295, 295, 295, 370, 326, 326, 357, 445, 282, 401, 282, 295, 326, 370, 370, 339, 326, 295, 277, 326, 295, 295, 264, 326, 295, 277, 370, 264, 264, 326, 339, 370, 264, 339, 295, 339, 295, 370, 251, 233, 370, 401, 277, 388, 401, 308, 383, 370, 264, 295, 264, 339, 383, 295, 246, 445, 339, 326, 326, 295, 370, 339, 308, 326, 308, 476, 295, 339, 339, 383, 401, 401, 264, 357, 352, 339, 277, 370, 339, 264, 339, 308, 383, 264, 339, 277, 295, 339, 339, 432, 339, 339, 308, 339, 277, 277, 445, 383, 308, 308, 370, 308, 339, 308, 339, 326, 370, 476, 339, 308, 383, 308, 339, 308, 339, 326, 264, 370, 308, 277, 308, 370, 308, 339, 370, 414, 295, 308, 414, 277, 321, 339, 383, 339, 352, 445, 295, 308, 507, 308, 383, 277, 339, 339, 308, 277, 339, 277, 339, 352, 277, 383, 352, 352, 308, 352, 383, 383, 295, 277, 383, 326, 277, 308, 352, 308, 321, 414, 383, 277, 308, 414, 277, 414, 308, 259, 277, 383, 308, 339, 352, 352, 321, 352, 339, 321, 321, 308, 308, 352, 352, 352, 414, 295, 259, 259, 383, 414, 290, 383, 352, 352, 277, 321, 259, 365, 308, 290, 308, 308, 321, 308, 352, 321, 321, 290, 458, 308, 352, 339, 277, 290, 321, 383, 383, 383, 334, 321, 290, 339, 383, 259, 334, 321, 321, 383, 352, 290, 334, 290, 259, 383, 427, 321, 321, 321, 383, 383, 321, 383, 352, 290, 427, 365, 290, 321, 290, 396, 352, 352, 290, 321, 321, 352, 215, 321, 321, 290, 321, 321, 321, 290, 352, 259, 246, 365, 365, 277, 290, 365, 365, 352, 321, 352, 440, 277, 277, 396, 396, 290}

#------------
#cycle_length
#------------
def cycle_length (n) :
    """
    n is positive integer
    return the calculated cycle length for n
    """
    assert n > 0
    if cache[n] != None :
        return cache[n]
    m = n
    count = 1
    while m > 1 :
        if m < 1000000 :
            if cache[m] != None :
                cache[n] = cache[m] + count - 1
                return cache[m] + count - 1
        if (m % 2) == 0 :
            m = (m // 2)
            count += 1
        else :
            m = m + (m // 2) + 1
            count += 2
    assert count > 0
    cache[n] = count
    return count

# ------------
# collatz_read
# ------------

def collatz_read (s) :
    """
    read two ints
    s a string
    return a list of two ints, representing the beginning and end of a range, [i, j]
    """
    assert s != None
    a = s.split()
    assert a[0] != None
    assert a[1] != None
    return [int(a[0]), int(a[1])]

# ------------
# collatz_eval
# ------------

def collatz_eval (i, j) :
    """
    i the beginning of the range, inclusive
    j the end       of the range, inclusive
    return the max cycle length of the range [i, j]
    """
    assert i > 0
    assert j > 0
    rangeMin = 0
    rangeMax = 0
    #Used to cut out values under half the max range
    possibleMin = 0

    #grabing the min and max of the input
    if i < j :
        rangeMin = i
        rangeMax = j
    elif j < i :
        rangeMax = i
        rangeMin = j
    else :
        return cycle_length(i)

    assert rangeMin > 0
    assert rangeMax > 0
    possibleMin = rangeMax // 2 + 1
    if possibleMin > rangeMin :
        rangeMin = possibleMin

    max = 0

    #calculating the cycle length while tracking the max
    while rangeMin < rangeMax :
        if (rangeMin % 1000) == 0 & rangeMax >= (rangeMin + 1000) :
            cl = meta_cache_L1(rangeMin // 1000)
            rangeMin += 1000
        elif (rangeMin % 400) == 0 & rangeMax >= (rangeMin + 400) :
            cl = meta_cache_L2(rangeMin // 400)
            rangeMin += 400
        else :
            cl = cycle_length(rangeMin)
            rangeMin += 1
        if cl > max :
            max = cl

    assert max > 0
    return max

# -------------
# collatz_print
# -------------

def collatz_print (w, i, j, v) :
    """
    print three ints
    w a writer
    i the beginning of the range, inclusive
    j the end       of the range, inclusive
    v the max cycle length
    """
    assert i != None
    assert j != None
    assert v != None
    w.write(str(i) + " " + str(j) + " " + str(v) + "\n")
    #w.write(str(v) + ", ")

# -------------
# collatz_solve
# -------------

def collatz_solve (r, w) :
    """
    r a reader
    w a writer
    """
    #Should I use asserts for this or nah
    for s in r :
        i, j = collatz_read(s)
        v    = collatz_eval(i, j)
        collatz_print(w, i, j, v)

# ----
# main
# ----

if __name__ == "__main__" :
    collatz_solve(sys.stdin, sys.stdout)
